Index: src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/RecipeSnapshotController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unipi.dii.inginf.lsdb.justrecipe.controller;\n\nimport it.unipi.dii.inginf.lsdb.justrecipe.model.Recipe;\nimport it.unipi.dii.inginf.lsdb.justrecipe.model.Session;\nimport it.unipi.dii.inginf.lsdb.justrecipe.persistence.Neo4jDriver;\nimport it.unipi.dii.inginf.lsdb.justrecipe.utils.Utils;\nimport javafx.fxml.FXML;\nimport javafx.scene.control.Label;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.MouseEvent;\nimport javafx.scene.layout.Pane;\nimport javafx.scene.text.Text;\n\nimport java.util.Date;\n\npublic class RecipeSnapshotController {\n\n    @FXML private Pane snapPane;\n    @FXML private Label snapTitle;\n    @FXML private Label snapUser;\n    @FXML private Label snapCarbs;\n    @FXML private Label snapCal;\n    @FXML private Label snapFat;\n    @FXML private Label snapProtein;\n    @FXML private ImageView snapImg;\n    @FXML private Label snapCategories;\n\n    private Recipe recipe; // recipe shows in this snapshot\n    private Neo4jDriver neo4jDriver;\n    private Session appSession;\n\n    public void initialize ()\n    {\n        appSession = Session.getInstance();\n        neo4jDriver = Neo4jDriver.getInstance();\n        snapPane.setOnMouseClicked(mouseEvent -> showMoreInformation(mouseEvent));\n    }\n\n    /**\n     * This function is used to show the complete information of the recipe in a new page\n     * @param mouseEvent    The event that leads to show the recipe completely (click of the mouse in the pane)\n     */\n    private void showMoreInformation(MouseEvent mouseEvent) {\n        RecipePageController recipePageController =\n                (RecipePageController) Utils.changeScene(\"/recipePage.fxml\", mouseEvent);\n        recipePageController.setRecipe(recipe);\n    }\n\n\n    public void setRecipe (Recipe recipe)\n    {\n        this.recipe = recipe;\n        snapTitle.setText(recipe.getTitle());\n        snapUser.setText(recipe.getAuthorUsername());\n        snapCarbs.setText(String.valueOf(recipe.getCarbs()));\n        snapProtein.setText(String.valueOf(recipe.getProtein()));\n        snapFat.setText(String.valueOf(recipe.getFat()));\n        snapCal.setText(String.valueOf(recipe.getCalories()));\n        snapCategories.setText(Utils.fromListToString(recipe.getCategories()));\n        if (recipe.getPicture() != null)\n        {\n            snapImg.setImage(new Image(recipe.getPicture()));\n        }\n        else\n        {\n            snapImg.setImage(new Image(\"img/genericRecipe.png\"));\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/RecipeSnapshotController.java b/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/RecipeSnapshotController.java
--- a/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/RecipeSnapshotController.java	(revision 30380974270b3cceba1fe9cb204f49a0351945a7)
+++ b/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/RecipeSnapshotController.java	(date 1608318622166)
@@ -2,6 +2,7 @@
 
 import it.unipi.dii.inginf.lsdb.justrecipe.model.Recipe;
 import it.unipi.dii.inginf.lsdb.justrecipe.model.Session;
+import it.unipi.dii.inginf.lsdb.justrecipe.persistence.MongoDBDriver;
 import it.unipi.dii.inginf.lsdb.justrecipe.persistence.Neo4jDriver;
 import it.unipi.dii.inginf.lsdb.justrecipe.utils.Utils;
 import javafx.fxml.FXML;
@@ -12,6 +13,7 @@
 import javafx.scene.layout.Pane;
 import javafx.scene.text.Text;
 
+import javax.lang.model.type.NullType;
 import java.util.Date;
 
 public class RecipeSnapshotController {
Index: src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/model/Recipe.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unipi.dii.inginf.lsdb.justrecipe.model;\n\nimport com.google.gson.annotations.SerializedName;\nimport org.bson.types.ObjectId;\n\nimport java.beans.Transient;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\npublic class Recipe {\n    private String title;\n    private String instructions;\n    private List<String> ingredients;\n    private List<String> categories;\n    private int calories;\n    private int fat;\n    private int protein;\n    private int carbs;\n    private Date creationTime;\n    private String picture;\n    private String authorUsername;\n    private List<Comment> comments;\n\n    //Blank constructor\n    public Recipe(){}\n\n    //Constructor\n    public Recipe(String title, String instructions, List<String> ingredients, List<String> categories,\n                  int calories, int fat, int protein, int carbs, Date creationTime, String picture, String authorUsername,\n                  List<Comment> comments)\n    {\n        this.title = title;\n        this.picture = picture;\n        this.instructions = instructions;\n        this.ingredients = ingredients;\n        this.categories = categories;\n        this.creationTime = creationTime;\n        this.calories = calories;\n        this.fat = fat;\n        this.protein = protein;\n        this.carbs = carbs;\n        this.authorUsername = authorUsername;\n        this.comments = comments;\n    }\n\n    public Recipe(String title, String instructions, List<String> ingredients, List<String> categories,\n                  int calories, int fat, int protein, int carbs, Date creationTime, String picture,\n                  String authorUsername)\n    {\n        this( title, instructions, ingredients, categories, calories, fat, protein, carbs,\n                creationTime, picture, authorUsername, new ArrayList<Comment>());\n    }\n\n\n    //Getters\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getPicture() {\n        return picture;\n    }\n\n    public String getInstructions() {\n        return instructions;\n    }\n\n    public List<String> getIngredients() {\n        return ingredients;\n    }\n\n    public List<String> getCategories() {\n        return categories;\n    }\n\n    public Date getCreationTime() {\n        return creationTime;\n    }\n\n    public int getCalories() {\n        return calories;\n    }\n\n    public int getFat() {\n        return fat;\n    }\n\n    public int getProtein() {\n        return protein;\n    }\n\n    public int getCarbs() {\n        return carbs;\n    }\n\n    public String getAuthorUsername() {\n        return authorUsername;\n    }\n\n    public List<Comment> getComments() {\n        return comments;\n    }\n\n    //Setters\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public void setPicture(String picture) {\n        this.picture = picture;\n    }\n\n    public void setInstructions(String instructions) {\n        this.instructions = instructions;\n    }\n\n    public void setIngredients(List<String> ingredients) {\n        this.ingredients = ingredients;\n    }\n\n    public void setCategories(List<String> categories) {\n        this.categories = categories;\n    }\n\n    public void setCreationTime(Date creationTime) {\n        this.creationTime = creationTime;\n    }\n\n    public void setCalories(int calories) {\n        this.calories = calories;\n    }\n\n    public void setFat(int fat) {\n        this.fat = fat;\n    }\n\n    public void setProtein(int protein) {\n        this.protein = protein;\n    }\n\n    public void setCarbs(int carbs) {\n        this.carbs = carbs;\n    }\n\n    public void setAuthorUsername(String authorUsername) {\n        this.authorUsername = authorUsername;\n    }\n\n    public void setComments(List<Comment> comments) {\n        this.comments = comments;\n    }\n\n    public void addComments(Comment comment) {this.comments.add(comment);}\n\n    @Override\n    public String toString() {\n        return \"Recipe{\" +\n                \"title='\" + title + '\\'' +\n                \", instructions='\" + instructions + '\\'' +\n                \", ingredients=\" + ingredients +\n                \", categories=\" + categories +\n                \", calories=\" + calories +\n                \", fat=\" + fat +\n                \", protein=\" + protein +\n                \", carbs=\" + carbs +\n                \", creationTime=\" + creationTime +\n                \", picture='\" + picture + '\\'' +\n                \", authorUsername='\" + authorUsername + '\\'' +\n                \", comments=\" + comments +\n                '}';\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/model/Recipe.java b/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/model/Recipe.java
--- a/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/model/Recipe.java	(revision 30380974270b3cceba1fe9cb204f49a0351945a7)
+++ b/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/model/Recipe.java	(date 1608286618533)
@@ -44,6 +44,13 @@
         this.comments = comments;
     }
 
+    public Recipe(String title, int fat, int calories, int protein){
+        this.title = title;
+        this.fat = fat;
+        this.protein = protein;
+        this.calories = calories;
+    }
+
     public Recipe(String title, String instructions, List<String> ingredients, List<String> categories,
                   int calories, int fat, int protein, int carbs, Date creationTime, String picture,
                   String authorUsername)
Index: src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/persistence/MongoDBDriver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unipi.dii.inginf.lsdb.justrecipe.persistence;\n\nimport com.google.gson.Gson;\nimport com.google.gson.reflect.TypeToken;\nimport com.mongodb.ConnectionString;\nimport com.mongodb.MongoClientSettings;\nimport com.mongodb.client.*;\nimport com.mongodb.client.model.Accumulators;\nimport com.mongodb.client.model.Aggregates;\nimport com.mongodb.client.model.Filters;\nimport it.unipi.dii.inginf.lsdb.justrecipe.config.ConfigurationParameters;\nimport it.unipi.dii.inginf.lsdb.justrecipe.model.Comment;\nimport it.unipi.dii.inginf.lsdb.justrecipe.model.Recipe;\nimport it.unipi.dii.inginf.lsdb.justrecipe.model.User;\nimport it.unipi.dii.inginf.lsdb.justrecipe.utils.Utils;\nimport org.bson.Document;\nimport org.bson.codecs.configuration.CodecRegistry;\nimport org.bson.codecs.pojo.PojoCodecProvider;\nimport org.bson.conversions.Bson;\nimport java.lang.reflect.Type;\nimport java.util.*;\nimport java.util.function.Consumer;\nimport java.util.regex.Pattern;\n\nimport static com.mongodb.client.model.Aggregates.*;\nimport static com.mongodb.client.model.Filters.eq;\nimport static com.mongodb.client.model.Projections.*;\nimport static com.mongodb.client.model.Projections.include;\nimport static com.mongodb.client.model.Sorts.descending;\nimport static org.bson.codecs.configuration.CodecRegistries.fromProviders;\nimport static org.bson.codecs.configuration.CodecRegistries.fromRegistries;\n\n/**\n * This class is used to communicate with MongoDB\n */\npublic class MongoDBDriver implements DatabaseDriver{\n    private static MongoDBDriver instance;\n\n    private MongoClient mongoClient;\n    private MongoDatabase database;\n    private MongoCollection collection;\n    private CodecRegistry pojoCodecRegistry;\n    private String ip;\n    private int port;\n    private String username;\n    private String password;\n    private String dbName;\n\n    public static MongoDBDriver getInstance() {\n        if (instance == null)\n        {\n            instance = new MongoDBDriver(Utils.readConfigurationParameters());\n        }\n        return instance;\n    }\n\n    /**\n     * Consumer function that prints the document in json format\n     */\n    private Consumer<Document> printDocuments = doc -> {\n        System.out.println(doc.toJson());\n    };\n\n    private MongoDBDriver (ConfigurationParameters configurationParameters)\n    {\n        this.ip = configurationParameters.getMongoIp();\n        this.port = configurationParameters.getMongoPort();\n        this.username = configurationParameters.getMongoUsername();\n        this.password = configurationParameters.getMongoPassword();\n        this.dbName = configurationParameters.getMongoDbName();\n        initConnection();\n        chooseCollection(\"recipe\");\n    }\n\n    /**\n     * Method that inits the MongoClient and choose the correct database\n     */\n    @Override\n    public void initConnection() {\n        ConnectionString connectionString;\n        if (!username.equals(\"\")) // if there are access rules\n        {\n            connectionString = new ConnectionString(\"mongodb://\" + username + \":\" + password\n                    + \"@\" + ip + \":\" + port);\n        }\n        else // standard access\n        {\n            connectionString = new ConnectionString(\"mongodb://\" + ip + \":\" + port);\n        }\n        mongoClient = MongoClients.create(connectionString);\n        database = mongoClient.getDatabase(dbName);\n        pojoCodecRegistry = fromRegistries(MongoClientSettings.getDefaultCodecRegistry(),\n                fromProviders(PojoCodecProvider.builder().automatic(true).build()));\n    }\n\n    /**\n     * Method used to close the connection\n     */\n    @Override\n    public void closeConnection() {\n        if (mongoClient != null)\n            mongoClient.close();\n    }\n\n    /**\n     * Method used to change the collection\n     * @param name  name of the new collection\n     */\n    public void chooseCollection(String name)\n    {\n        collection = database.getCollection(name);\n    }\n\n    /**\n     * Function used to get the list of Recipe to show in the homepage\n     * @param howManySkip       how many to skip\n     * @param howMany           how many recipe we want obtain\n     * @param follower          list of follower of the user, used to choose the interest recipes\n     * @return                  The list of element to show, in descendent order from creationTime\n     */\n    public List<Recipe> getHomepageRecipe (int howManySkip, int howMany, List<User> follower)\n    {\n        List<Recipe> recipes = new ArrayList<>();\n        Gson gson = new Gson();\n        List<Document> results = new ArrayList<>();\n        if (follower.size() != 0)\n        {\n            // TO DO\n            // Check for the recipe done by the following of the user\n        }\n        else\n        {\n            Bson sort = sort(descending(\"creationTime\"));\n            Bson skip = skip(howManySkip);\n            Bson limit = limit(howMany);\n            results = (List<Document>) collection.aggregate(Arrays.asList(sort, skip, limit))\n                    .into(new ArrayList<>());\n        }\n\n        // This is important for deserialize the results in a list of recipe\n        Type recipeListType = new TypeToken<ArrayList<Recipe>>(){}.getType();\n        recipes = gson.fromJson(gson.toJson(results), recipeListType);\n        return recipes;\n    }\n\n    /**\n     * Function that returns \"howMany\" recipes that contains in their title the title inserted by the user\n     * @param title         Title to check\n     * @param howManySkip   How many to skip\n     * @param howMany       How many recipe we want obtain\n     * @return              The list of the recipes that match the condition\n     */\n    public List<Recipe> searchRecipesFromTitle (String title, int howManySkip, int howMany)\n    {\n        List<Recipe> recipes = new ArrayList<>();\n        Gson gson = new Gson();\n        Pattern pattern = Pattern.compile(\"^.*\" + title + \".*$\", Pattern.CASE_INSENSITIVE);\n        Bson match = Aggregates.match(Filters.regex(\"title\", pattern));\n        Bson sort = sort(descending(\"creationTime\"));\n        Bson skip = skip(howManySkip);\n        Bson limit = limit(howMany);\n        List<Document> results = (List<Document>) collection.aggregate(Arrays.asList(match, sort, skip, limit))\n                .into(new ArrayList<>());\n        Type recipeListType = new TypeToken<ArrayList<Recipe>>(){}.getType();\n        recipes = gson.fromJson(gson.toJson(results), recipeListType);\n        return recipes;\n    }\n\n    /**\n     * Function that return the most common categories (the top one used)\n     * @param howManyCategories     How many category to consider in the rank\n     * @return                      The category ordered by the number of recipes in which it is used\n     */\n    public List<String> searchMostCommonRecipeCategories (int howManyCategories)\n    {\n        List<String> mostCommonCategories = new ArrayList<>();\n        Bson unwind = unwind(\"$categories\");\n        Bson group = group(\"$categories\", Accumulators.sum(\"numberOfRecipes\", 1));\n        Bson project = project(fields(computed(\"categories\", \"$_id\"), excludeId(), include(\"numberOfRecipes\")));\n        Bson sort = sort(descending(\"numberOfRecipes\"));\n        Bson limit = limit(howManyCategories);\n        List<Document> results = (List<Document>)\n                collection.aggregate(Arrays.asList(unwind, group, project, sort, limit)).into(new ArrayList());\n\n        for (Document document: results)\n        {\n            mostCommonCategories.add(document.getString(\"categories\"));\n        }\n        return mostCommonCategories;\n    }\n\n    /**\n     * Function that returns \"howMany\" recipes of one category\n     * @param category      The category to consider\n     * @param howMany       How many recipes to return\n     * @return              List of the recipes\n     */\n    public List<Recipe> getRecipesOfCategory (String category, int howMany)\n    {\n        List<Recipe> recipes = new ArrayList<>();\n        Gson gson = new Gson();\n        Bson match = match(Filters.in(\"categories\", category));\n        Bson sort = sort(descending(\"creationTime\"));\n        Bson limit = limit(howMany);\n        List<Document> results = (List<Document>)\n                collection.aggregate(Arrays.asList(match, sort, limit)).into(new ArrayList());\n        Type recipeListType = new TypeToken<ArrayList<Recipe>>(){}.getType();\n        recipes = gson.fromJson(gson.toJson(results), recipeListType);\n        return recipes;\n    }\n\n    /**\n     * Function for searching all the comments, ordered by the creationTime (first the last)\n     * The list will be useful for the moderators\n     * @param howManySkip   How many to skip\n     * @param howMany       How many comments we want obtain\n     * @return              The list of the comments\n     */\n    public List<Comment> searchAllComments (int howManySkip, int howMany)\n    {\n        List<Comment> comments = new ArrayList<>();\n        Gson gson = new Gson();\n        Bson unwind = unwind(\"$comments\");\n        Bson sort = sort(descending(\"creationTime\"));\n        Bson skip = skip(howManySkip);\n        Bson limit = limit(howMany);\n        MongoCursor<Document> iterator = (MongoCursor<Document>)\n                collection.aggregate(Arrays.asList(unwind, sort, skip, limit)).iterator();\n        while (iterator.hasNext())\n        {\n            Document document = (Document) iterator.next().get(\"comments\");\n            Comment comment = gson.fromJson(gson.toJson(document), Comment.class);\n            comments.add(comment);\n        }\n        return comments;\n    }\n    public void updateComments(String title, List<Comment> comments){\n//        chooseCollection(\"recipe\");\n        collection = collection.withCodecRegistry(pojoCodecRegistry);\n        Bson update = new Document(\"comments\", comments);\n        Bson updateOperation = new Document(\"$set\", update);\n        collection.updateOne(new Document(\"title\", title), updateOperation);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/persistence/MongoDBDriver.java b/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/persistence/MongoDBDriver.java
--- a/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/persistence/MongoDBDriver.java	(revision 30380974270b3cceba1fe9cb204f49a0351945a7)
+++ b/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/persistence/MongoDBDriver.java	(date 1608324246622)
@@ -17,6 +17,8 @@
 import org.bson.codecs.configuration.CodecRegistry;
 import org.bson.codecs.pojo.PojoCodecProvider;
 import org.bson.conversions.Bson;
+
+import javax.print.Doc;
 import java.lang.reflect.Type;
 import java.util.*;
 import java.util.function.Consumer;
@@ -143,6 +145,30 @@
         return recipes;
     }
 
+    public List<Recipe> getRecipesFromAuthorUsername(int howManySkip, int howMany, String username){
+        List<Recipe> recipes = new ArrayList<>();
+        Gson gson = new Gson();
+        List<Document> results = new ArrayList<>();
+        Bson sort = sort(descending("creationTime"));
+        Bson skip = skip(howManySkip);
+        Bson limit = limit(howMany);
+        Bson match = match(eq("authorUsername", username));
+        results = (List<Document>) collection.aggregate(Arrays.asList(match, sort, skip, limit))
+                .into(new ArrayList<>());
+        Type recipeListType = new TypeToken<ArrayList<Recipe>>(){}.getType();
+        recipes = gson.fromJson(gson.toJson(results), recipeListType);
+        return recipes;
+    }
+
+    public Recipe getRecipeFromTitle(String title){
+        Recipe recipe = null;
+        Gson gson = new Gson();
+        Type recipeType = new TypeToken<Recipe>(){}.getType();
+        Document myDoc =(Document) collection.find(eq("title", title)).first();
+        recipe = gson.fromJson(gson.toJson(myDoc), recipeType);
+        return recipe;
+    }
+
     /**
      * Function that returns "howMany" recipes that contains in their title the title inserted by the user
      * @param title         Title to check
@@ -163,6 +189,7 @@
                 .into(new ArrayList<>());
         Type recipeListType = new TypeToken<ArrayList<Recipe>>(){}.getType();
         recipes = gson.fromJson(gson.toJson(results), recipeListType);
+        System.out.println(recipes);
         return recipes;
     }
 
Index: src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/persistence/Neo4jDriver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unipi.dii.inginf.lsdb.justrecipe.persistence;\n\nimport com.sun.org.apache.xpath.internal.operations.Bool;\nimport it.unipi.dii.inginf.lsdb.justrecipe.config.ConfigurationParameters;\nimport it.unipi.dii.inginf.lsdb.justrecipe.model.Recipe;\nimport it.unipi.dii.inginf.lsdb.justrecipe.model.User;\nimport it.unipi.dii.inginf.lsdb.justrecipe.utils.Utils;\nimport org.neo4j.driver.*;\n\nimport java.util.Date;\nimport java.util.NoSuchElementException;\n\nimport static org.neo4j.driver.Values.parameters;\n\n/**\n * This class is used to communicate with Neo4j\n */\npublic class Neo4jDriver implements DatabaseDriver{\n    private static Neo4jDriver instance = null; // Singleton Instance\n\n    private Driver driver;\n    private String ip;\n    private int port;\n    private String username;\n    private String password;\n\n    private Neo4jDriver(ConfigurationParameters configurationParameters)\n    {\n        this.ip = configurationParameters.getNeo4jIp();\n        this.port = configurationParameters.getNeo4jPort();\n        this.username = configurationParameters.getNeo4jUsername();\n        this.password = configurationParameters.getNeo4jPassword();\n        initConnection();\n    }\n\n    public static Neo4jDriver getInstance()\n    {\n        if (instance == null)\n        {\n            instance = new Neo4jDriver(Utils.readConfigurationParameters());\n        }\n        return instance;\n    }\n\n    /**\n     * Method that inits the Driver\n     */\n    @Override\n    public void initConnection()\n    {\n        driver = GraphDatabase.driver( \"neo4j://\" + ip + \":\" + port, AuthTokens.basic( username, password ) );\n    }\n\n    /**\n     * Method for closing the connection of the Driver\n     */\n    @Override\n    public void closeConnection ()\n    {\n        if (driver != null)\n            driver.close();\n    }\n\n    /**\n     * Method that creates a new node in the graphDB with the information of the new user\n     * @param firstName     first name of the new user\n     * @param lastName      last name of the new user\n     * @param username      username of the new user\n     * @param password      password of the new user\n     */\n    public void addUser( final String firstName, final String lastName, final String username,\n                         final String password)\n    {\n        try ( Session session = driver.session())\n        {\n            session.writeTransaction((TransactionWork<Void>) tx -> {\n                tx.run( \"MERGE (u:User {firstName: $firstName, lastName: $lastName, username: $username,\" +\n                                \"password: $password, role:0})\",\n                        parameters( \"firstName\", firstName, \"lastName\", lastName, \"username\",\n                                username, \"password\", password ) );\n                return null;\n            });\n        }\n    }\n\n    /**\n     * It controls that a user with the given username exists or not\n     * @param username  username of the user that I want to control\n     * @return true if the user is registered, false otherwise\n     */\n    public boolean isRegistered (final String username)\n    {\n        Boolean isPresent;\n        try ( Session session = driver.session())\n        {\n             isPresent = session.readTransaction((TransactionWork<Boolean>) tx -> {\n                 Result result = tx.run( \"MATCH (u:User) \" +\n                                 \"WHERE u.username = $username \" +\n                                 \"RETURN u \" +\n                                 \"LIMIT 1\",\n                        parameters( \"username\", username) );\n                 if (result.stream().count() != 0)\n                    return true;\n                 else\n                     return false;\n            });\n        }\n        return isPresent;\n    }\n\n    /**\n     * It performs the login with the given username and password\n     * @param username  Username of the target user\n     * @param pw  Password of the target user\n     * @return The object user if the login is done successfully, otherwise null\n     */\n    public User login(final String username, final String pw)\n    {\n        User u = null;\n        try ( Session session = driver.session())\n        {\n            u = session.readTransaction((TransactionWork<User>) tx -> {\n                Result result = tx.run( \"MATCH (u:User) \" +\n                                \"WHERE u.username = $username \" +\n                                \"AND u.password = $password \" +\n                                \"RETURN u.firstName, u.lastName, u.username, u.password, u.role  \" +\n                                \"LIMIT 1\",\n                        parameters( \"username\", username,\"password\",pw) );\n                User log = null;\n                try\n                {\n                    Record r = result.next();\n                    log = new User(r.get(0).asString(),r.get(1).asString(),null,r.get(2).asString(),r.get(3).asString(),r.get(4).asInt());\n                }\n                catch (NoSuchElementException ex)\n                {\n                    log = null;\n                }\n\n                return log;\n            });\n        }\n        return u;\n    }\n\n    /**\n     * It controls if a user with username @one is followed by the user with username @two\n     * @param one  Username of user one\n     * @param two  Username of user two\n     * @return  true if one is followed by two, false otherwise\n     */\n    public Boolean isUserOneFollowedByUserTwo(String one, String two)\n    {\n        Boolean relation;\n        try(Session session = driver.session())\n        {\n            relation = session.readTransaction((TransactionWork<Boolean>) tx -> {\n                    Result r = tx.run(\"match (a:User{username:$two})-[r:FOLLOWS]->(b:User{username:$one}) \" +\n                            \"return count(*)\",parameters(\"one\",one,\"two\",two));\n                    Record rec = r.next();\n                    if(rec.get(0).asInt()==0)\n                        return false;\n                    else\n                        return true;\n            });\n        }\n        return relation;\n    }\n\n    /**\n     * It creates the relation follower-[:Follow]->following\n     * @param follower  The user who starts to follow\n     * @param following  The user who is followed by follower\n     */\n    public void follow(String follower, String following)\n    {\n        try(Session session = driver.session())\n        {\n            session.writeTransaction((TransactionWork<Integer>) tx -> {\n                    tx.run(\"match (a:User) where a.username=$following \" +\n                            \"match (b:User) where b.username=$follower \" +\n                            \"merge (b)-[:FOLLOWS]->(a)\",parameters(\"follower\",follower,\"following\",following));\n                    return 1;\n                });\n        }\n    }\n\n    /**\n     * It deletes the relation oldFollower-[:Follow]->oldFollowing\n     * @param oldFollower  The user who decide to unfollow\n     * @param oldFollowing  The user unfollowed\n     */\n    public void unfollow(String oldFollower, String oldFollowing)\n    {\n        try(Session session = driver.session())\n        {\n            session.writeTransaction((TransactionWork<Integer>) tx -> {\n                    tx.run(\"match (u:User{username:$oldFollower})-[r:FOLLOWS]->(u2:User{username:$oldFollowing})\" +\n                            \" delete r\",parameters(\"oldFollower\",oldFollower,\"oldFollowing\",oldFollowing));\n                    return 1;\n                });\n        }\n    }\n\n    /**\n     * It counts the number of follower of a given user\n     * @param user  Username of the target user\n     * @return  the number of follower\n     */\n    public int howManyFollower(String user)\n    {\n        return howMany( \"match (a:User)-[r:FOLLOWS]->(b:User{username:$user}) return count(a)\",user);\n    }\n\n    /**\n     * It counts the number of following of a given user\n     * @param user  Username of the target user\n     * @return  The number of following\n     */\n    public int howManyFollowing(String user)\n    {\n        return howMany(\"match (a:User)<-[r:FOLLOWS]-(b:User{username:$placeholder}) return count(a)\",user);\n    }\n\n    /**\n     * It counts the number of likes of a given recipe\n     * @param recipeTitle  Title of the given recipe\n     * @return  The number of likes\n     */\n    public int howManyLikes(String recipeTitle)\n    {\n        return howMany(\"match (a:User)-[r:LIKES]->(b:Recipe{title:$placeholder}) return count(a)\",recipeTitle);\n    }\n    /**\n     * Private function which execute a given query that count how many relation enter or go out from a node\n     * @param query  query text\n     * @param userOrRecipe  username of the given user or title of the given recipe\n     * @return  the number of incoming or outgoing relation\n     */\n    private int howMany(String query, String userOrRecipe)\n    {\n        int howMany;\n\n        try(Session session = driver.session())\n        {\n            howMany = session.readTransaction((TransactionWork<Integer>) tx -> {\n                Result r = tx.run(query,parameters(\"placeholder\",userOrRecipe));\n                Record rec = r.next();\n                return rec.get(0).asInt();\n            });\n        }\n        return howMany;\n    }\n\n    /**\n     * It controls if the given recipe is liked by the given user\n     * @param recipeTitle  title of the given recipe\n     * @param one  username of the given user\n     * @return  true if the given recipe is liked by the given user, false otherwise\n     */\n    public Boolean isThisRecipeLikedByOne(String recipeTitle, String one)\n    {\n        Boolean relation;\n        try(Session session = driver.session())\n        {\n            relation = session.readTransaction((TransactionWork<Boolean>) tx -> {\n                Result r = tx.run(\"match (a:User{username:$one})-[r:LIKES]->(b:Recipe{title:$t}) \" +\n                        \"return count(*)\",parameters(\"one\",one,\"t\",recipeTitle));\n                Record rec = r.next();\n                if(rec.get(0).asInt()==0)\n                    return false;\n                else\n                    return true;\n            });\n        }\n        return relation;\n    }\n\n    /**\n     * It creates the relation user-[:LIKES]->recipe\n     * @param user  Username of the target user\n     * @param recipeTitle  Title of the target recipe\n     */\n    public void like(String user, String recipeTitle)\n    {\n        try(Session session = driver.session())\n        {\n            session.writeTransaction((TransactionWork<Integer>) tx -> {\n                    tx.run(\"match (a:User) where a.username=$u \" +\n                            \"match (b:Recipe) where b.title=$t \" +\n                            \"merge (a)-[:LIKES]->(b)\",parameters(\"u\",user,\"t\",recipeTitle));\n                    return 1;\n            });\n        }\n    }\n\n    /**\n     * It deletes the relation user-[:LIKES]->recipe\n     * @param user  Username of the target user\n     * @param recipeTitle  Title of the target recipe\n     */\n    public void unlike(String user, String recipeTitle)\n    {\n        try(Session session = driver.session())\n        {\n            session.writeTransaction((TransactionWork<Integer>) tx -> {\n                    tx.run(\"match (u:User{username:$u})-[r:LIKES]->(p:Recipe{title:$t})\" +\n                            \" delete r\",parameters(\"u\",user,\"t\",recipeTitle));\n                    return 1;\n            });\n        }\n    }\n\n    /**\n     * It deletes the user with the given username\n     * @param username username of the user that I want to delete\n     */\n    public void deleteUser(String username)\n    {\n\n    }\n\n    /**\n     * It deletes a recipe given the title and the creation timestamp (the title is not unique)\n     * @param title  title of the recipe that I want to delete (target recipe)\n     * @param creationTs  creation timestamp of the target recipe\n     */\n    public void deleteRecipe(String title, Date creationTs)\n    {\n\n    }\n\n    /**\n     * It deletes a comment given the author and the creationTs\n     * @param author author of the target comment\n     * @param creationTs creation timestamp of the target comment\n     */\n    public void deleteComment(String author, Date creationTs)\n    {\n\n    }\n\n    /**\n     * Edit a user given its username\n     * @param username username of the target user\n     */\n    public void editProfile(String username)\n    {\n\n    }\n\n    /**\n     * It edit a comment given its title and its creation timestamp\n     * @param title\n     * @param creationTs\n     */\n    public void editComment(String title, Date creationTs)\n    {\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/persistence/Neo4jDriver.java b/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/persistence/Neo4jDriver.java
--- a/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/persistence/Neo4jDriver.java	(revision 30380974270b3cceba1fe9cb204f49a0351945a7)
+++ b/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/persistence/Neo4jDriver.java	(date 1608300704606)
@@ -7,9 +7,12 @@
 import it.unipi.dii.inginf.lsdb.justrecipe.utils.Utils;
 import org.neo4j.driver.*;
 
+import java.util.ArrayList;
 import java.util.Date;
+import java.util.List;
 import java.util.NoSuchElementException;
 
+import static org.neo4j.driver.Values.NULL;
 import static org.neo4j.driver.Values.parameters;
 
 /**
@@ -357,5 +360,37 @@
     public void editComment(String title, Date creationTs)
     {
 
+    }
+
+    public List<Recipe> getRecipeSnap(int howManySkip, int howMany, String username){
+        List <Recipe> recipes = new ArrayList<>();
+        System.out.println(username);
+        try(Session session = driver.session()) {
+            session.readTransaction((TransactionWork<List<Recipe>>) tx -> {
+                Result result = tx.run("MATCH (u:User{username:$u})-[ADDS]->(r:Recipe)"+"RETURN r.title as Title," +
+                                "r.calories as Calories, r.fat as Fat, r.protein as Protein SKIP $skip LIMIT $limit",
+                        parameters("u",username, "skip", howManySkip, "limit", howMany));
+
+                while(result.hasNext()){
+                    Record r = result.next();
+                    String title = r.get("Title").asString();
+                    int calories = 0;
+                    int protein = 0;
+                    int fat = 0;
+                    if(r.get("Calories") != NULL)
+                        calories = r.get("Calories").asInt();
+                    if(r.get("Fat") != NULL)
+                        fat = r.get("Fat").asInt();
+                    if(r.get("Protein") != NULL)
+                        protein = r.get("Protein").asInt();
+                    Recipe recipe = new Recipe(title, fat, calories, protein);
+                    recipe.setAuthorUsername(username);
+                    recipes.add(recipe);
+                }
+                System.out.println(recipes);
+                return recipes;
+            });
+        }
+        return recipes;
     }
 }
Index: src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/ProfilePageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unipi.dii.inginf.lsdb.justrecipe.controller;\n\nimport it.unipi.dii.inginf.lsdb.justrecipe.model.Session;\nimport it.unipi.dii.inginf.lsdb.justrecipe.model.User;\nimport it.unipi.dii.inginf.lsdb.justrecipe.persistence.MongoDBDriver;\nimport it.unipi.dii.inginf.lsdb.justrecipe.persistence.Neo4jDriver;\nimport it.unipi.dii.inginf.lsdb.justrecipe.utils.Utils;\nimport javafx.fxml.FXML;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.MouseEvent;\n\npublic class ProfilePageController {\n    private Neo4jDriver neo4jDriver;\n    private MongoDBDriver mongoDBDriver;\n    private Session appSession;\n    @FXML private ImageView homepageIcon;\n    @FXML private ImageView discoveryImg;\n    @FXML private ImageView logoutPic;\n    @FXML private ImageView addRecipeImg;\n    @FXML private ImageView profileDeleteUser;\n    @FXML private ImageView profileEditUser;\n    public void initialize ()\n    {\n        appSession = Session.getInstance();\n        neo4jDriver = Neo4jDriver.getInstance();\n        //mongoDBDriver = MongoDBDriver.getInstance();\n        homepageIcon.setOnMouseClicked(mouseEvent -> clickOnHomepageToChangePage(mouseEvent));\n        discoveryImg.setOnMouseClicked(mouseEvent -> clickOnDiscImgtoChangePage(mouseEvent));\n        logoutPic.setOnMouseClicked(mouseEvent -> clickOnLogoutImg(mouseEvent));\n        addRecipeImg.setOnMouseClicked(mouseEvent -> clickOnAddRecipeImg(mouseEvent));\n    }\n\n    public void setProfile(User u)\n    {\n        if(appSession.getLoggedUser().getRole()!=3 && !appSession.getLoggedUser().getUsername().equals(u.getUsername()))\n            profileDeleteUser.setVisible(false);\n        else\n            profileDeleteUser.setOnMouseClicked(mouseEvent -> neo4jDriver.deleteUser(u.getUsername()));\n\n        if(appSession.getLoggedUser().getUsername().equals(u.getUsername()))\n            profileEditUser.setOnMouseClicked(mouseEvent -> neo4jDriver.editProfile(u.getUsername()));\n        else\n            profileEditUser.setVisible(false);\n    }\n\n    /**\n     * Function that let the navigation into the ui ---> homepage\n     * @param mouseEvent event that represents the click on the icon\n     */\n    private void clickOnHomepageToChangePage(MouseEvent mouseEvent){\n        try{\n            HomePageController homePageController = (HomePageController)\n                    Utils.changeScene(\"/homepage.fxml\", mouseEvent);\n        }catch (NullPointerException n){System.out.println(\"homePageController is null!!!!\");}\n    }\n\n    private void clickOnAddRecipeImg(MouseEvent mouseEvent){\n        try{\n            AddRecipePageController addRecipePageController;\n            addRecipePageController = (AddRecipePageController)\n                    Utils.changeScene(\"/addRecipe.fxml\", mouseEvent);\n        }catch (NullPointerException n){System.out.println(\"addRecipePageController is null!!!!\");n.printStackTrace();}\n    }\n\n    /**\n     * Function that let the logout action, by going into the welcome page\n     * @param mouseEvent event that represents the click on the icon\n     */\n    private void clickOnLogoutImg(MouseEvent mouseEvent){\n        try {\n            WelcomePageController welcomePageController = (WelcomePageController)\n                    Utils.changeScene(\"/welcome.fxml\", mouseEvent);\n        }catch (NullPointerException n){System.out.println(\"profilePageController is null!!!!\");}\n    }\n\n    /**\n     * Function that let the navigation into the ui ---> discoveryPage\n     * @param mouseEvent event that represents the click on the icon\n     */\n    private void clickOnDiscImgtoChangePage(MouseEvent mouseEvent){\n        try{\n            DiscoveryPageController discoveryPageController = (DiscoveryPageController)\n                    Utils.changeScene(\"/discoveryPage.fxml\", mouseEvent);\n        }catch (NullPointerException n){System.out.println(\"homePageController is null!!!!\");}\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/ProfilePageController.java b/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/ProfilePageController.java
--- a/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/ProfilePageController.java	(revision 30380974270b3cceba1fe9cb204f49a0351945a7)
+++ b/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/ProfilePageController.java	(date 1608326407586)
@@ -6,28 +6,56 @@
 import it.unipi.dii.inginf.lsdb.justrecipe.persistence.Neo4jDriver;
 import it.unipi.dii.inginf.lsdb.justrecipe.utils.Utils;
 import javafx.fxml.FXML;
+import javafx.scene.control.Button;
 import javafx.scene.image.ImageView;
 import javafx.scene.input.MouseEvent;
+import javafx.scene.layout.VBox;
+import javafx.scene.text.Text;
+
+import java.util.ArrayList;
 
 public class ProfilePageController {
     private Neo4jDriver neo4jDriver;
     private MongoDBDriver mongoDBDriver;
     private Session appSession;
+    private final int HOW_MANY_SNAPSHOT_TO_SHOW = 20;
+    private int page; // number of page (at the beginning at 0), increase with nextButton and decrease with previousButton
+
     @FXML private ImageView homepageIcon;
     @FXML private ImageView discoveryImg;
     @FXML private ImageView logoutPic;
     @FXML private ImageView addRecipeImg;
     @FXML private ImageView profileDeleteUser;
     @FXML private ImageView profileEditUser;
+    @FXML private VBox recipeVbox;
+    @FXML private Text userName;
+    @FXML private Text followerNumber;
+    @FXML private Text followingNumber;
+    @FXML private Text recipesNumber;
+    @FXML private Button nextButton;
+    @FXML private Button previousButton;
+
     public void initialize ()
     {
         appSession = Session.getInstance();
         neo4jDriver = Neo4jDriver.getInstance();
-        //mongoDBDriver = MongoDBDriver.getInstance();
+        mongoDBDriver = MongoDBDriver.getInstance();
+//        Utils.addRecipesSnap(recipeVbox, neo4jDriver.getRecipeSnap(0,HOW_MANY_SNAPSHOT_TO_SHOW, appSession.getLoggedUser().getUsername()));
+        userName.setText(appSession.getLoggedUser().getUsername());
+//        if (appSession.getLoggedUser().getRole() == 0)
+//            profileDeleteUser.setVisible(false);
+//        followerNumber.setText(String.valueOf(neo4jDriver.howManyFollower(userName.getText())));
+//        followerNumber.setText(String.valueOf(neo4jDriver.howManyFollowing(userName.getText())));
+//        recipesNumber.setText(String.valueOf(neo4jDriver.));
+        page = 0;
+        Utils.addRecipesSnap(recipeVbox, mongoDBDriver.getRecipesFromAuthorUsername(0, HOW_MANY_SNAPSHOT_TO_SHOW, appSession.getLoggedUser().getUsername()));
         homepageIcon.setOnMouseClicked(mouseEvent -> clickOnHomepageToChangePage(mouseEvent));
         discoveryImg.setOnMouseClicked(mouseEvent -> clickOnDiscImgtoChangePage(mouseEvent));
         logoutPic.setOnMouseClicked(mouseEvent -> clickOnLogoutImg(mouseEvent));
         addRecipeImg.setOnMouseClicked(mouseEvent -> clickOnAddRecipeImg(mouseEvent));
+        nextButton.setOnMouseClicked(mouseEvent -> clickOnNext(mouseEvent));
+        previousButton.setOnMouseClicked(mouseEvent -> clickOnPrevious(mouseEvent));
+        previousButton.setVisible(false); //in the first page it is not visible
     }
 
     public void setProfile(User u)
@@ -54,6 +82,10 @@
         }catch (NullPointerException n){System.out.println("homePageController is null!!!!");}
     }
 
+    /**
+     * Function that let the navigation into the ui ---> addRecipe
+     * @param mouseEvent event that represents the click on the icon
+     */
     private void clickOnAddRecipeImg(MouseEvent mouseEvent){
         try{
             AddRecipePageController addRecipePageController;
@@ -83,4 +115,24 @@
                     Utils.changeScene("/discoveryPage.fxml", mouseEvent);
         }catch (NullPointerException n){System.out.println("homePageController is null!!!!");}
     }
+
+    private void clickOnPrevious(MouseEvent mouseEvent){
+        Utils.removeAllFromPane(recipeVbox);
+        page--;
+        if (page < 1)
+            previousButton.setVisible(false);
+        Utils.addRecipesSnap(recipeVbox,
+                mongoDBDriver.getRecipesFromAuthorUsername(HOW_MANY_SNAPSHOT_TO_SHOW*page,
+                        HOW_MANY_SNAPSHOT_TO_SHOW, userName.getText()));
+    }
+
+    private void clickOnNext(MouseEvent mouseEvent){
+        Utils.removeAllFromPane(recipeVbox);
+        page++;
+        if (page > 0)
+            previousButton.setVisible(true);
+        Utils.addRecipesSnap(recipeVbox,
+                mongoDBDriver.getRecipesFromAuthorUsername(HOW_MANY_SNAPSHOT_TO_SHOW*page,
+                        HOW_MANY_SNAPSHOT_TO_SHOW, userName.getText()));
+    }
 }
Index: src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/RecipePageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unipi.dii.inginf.lsdb.justrecipe.controller;\n\nimport it.unipi.dii.inginf.lsdb.justrecipe.model.Comment;\nimport it.unipi.dii.inginf.lsdb.justrecipe.model.Recipe;\nimport it.unipi.dii.inginf.lsdb.justrecipe.model.Session;\nimport it.unipi.dii.inginf.lsdb.justrecipe.persistence.MongoDBDriver;\nimport it.unipi.dii.inginf.lsdb.justrecipe.persistence.Neo4jDriver;\nimport it.unipi.dii.inginf.lsdb.justrecipe.utils.Utils;\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.geometry.Pos;\nimport javafx.scene.AccessibleAction;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.TextArea;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.MouseEvent;\nimport javafx.scene.layout.Pane;\nimport javafx.scene.layout.VBox;\nimport javafx.scene.text.Font;\nimport javafx.scene.text.Text;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.Iterator;\nimport java.util.List;\n\n/**\n * Controller for the page of the recipe\n */\npublic class RecipePageController {\n\n    @FXML private ImageView homeImg;\n    @FXML private ImageView discoveryImg;\n    @FXML private ImageView profileImg;\n    @FXML private Text recipeInstructions;\n    @FXML private ImageView recipeLikeImg;\n    @FXML private ImageView recipePicture;\n    @FXML private ImageView logoutPic;\n    @FXML private Text recipeTitle;\n    @FXML private Text recipeUsername;\n    @FXML private Text recipeCarbs;\n    @FXML private Text recipeCalories;\n    @FXML private Text recipeFat;\n    @FXML private ImageView recipeEditImg;\n    @FXML private Text recipeCategories;\n    @FXML private Text recipeIngredients;\n    @FXML private Text recipeProtein;\n    @FXML private Label recipeLikes;\n    @FXML private Label recipeDate;\n    @FXML private VBox recipeVBox;\n    @FXML private ImageView recipeDelete;\n    @FXML private TextArea commentsArea;\n    @FXML private Button sendButton;\n    @FXML private Button cancelButton;\n\n    private Recipe recipe;\n   // private String username;\n    private Session appSession;\n    private Neo4jDriver neo4jDriver;\n    private MongoDBDriver mongoDBDriver;\n\n    public void initialize ()\n    {\n        homeImg.setOnMouseClicked(mouseEvent -> clickOnHomepageToChangePage(mouseEvent));\n        profileImg.setOnMouseClicked(mouseEvent -> clickOnProfileToChangePage(mouseEvent));\n        discoveryImg.setOnMouseClicked(mouseEvent -> clickOnDiscoveryToChangePage(mouseEvent));\n        logoutPic.setOnMouseClicked(mouseEvent -> clickOnLogoutImg(mouseEvent));\n        recipeVBox.setAlignment(Pos.CENTER);\n        appSession = Session.getInstance();\n        neo4jDriver = Neo4jDriver.getInstance();\n        mongoDBDriver = MongoDBDriver.getInstance();\n        sendButton.setOnAction(actionEvent -> handleSendButtonAction(actionEvent));\n        cancelButton.setOnAction(actionEvent -> handleCancelButtonAction(actionEvent));\n    }\n\n    private void handleSendButtonAction(ActionEvent actionEvent){\n        if(commentsArea.getText().equals(\"\")) {\n            Utils.showErrorAlert(\"No Comments in the CommentsArea\");\n            return;\n        }\n//        System.out.println(recipe.getComments());\n//        System.out.println(recipe.getTitle());\n        Comment comment = new Comment(appSession.getLoggedUser().getUsername(), commentsArea.getText(), new Date());\n        if(recipe.getComments() != null)\n            recipe.addComments(comment);\n        else{\n            List<Comment> comments= new ArrayList<>();\n            comments.add(comment);\n            recipe.setComments(comments);\n        }\n        Utils.showComment(recipeVBox, comment);\n//        System.out.println(recipe.getComments());\n        mongoDBDriver.updateComments(recipe.getTitle(), recipe.getComments());\n    }\n\n    private void handleCancelButtonAction(ActionEvent actionEvent){\n        if(!commentsArea.getText().equals(\"\")) commentsArea.setText(\"\");\n    }\n\n    /**\n     * Setters for the recipe, in which we also set the correct value to show\n     * @param recipe    Recipe to show\n     */\n    public void setRecipe(Recipe recipe) {\n        this.recipe = recipe;\n        recipeTitle.setText(recipe.getTitle());\n        recipeInstructions.setText(recipe.getInstructions());\n        if (recipe.getPicture() != null)\n        {\n            recipePicture.setImage(new Image(recipe.getPicture()));\n        }\n        else\n        {\n            recipePicture.setImage(new Image(\"img/genericRecipe.png\"));\n        }\n        recipeUsername.setText(recipe.getAuthorUsername());\n        recipeCarbs.setText(String.valueOf(recipe.getCarbs()));\n        recipeCalories.setText(String.valueOf(recipe.getCalories()));\n        recipeFat.setText(String.valueOf(recipe.getFat()));\n        recipeProtein.setText(String.valueOf(recipe.getProtein()));\n        recipeCategories.setText(Utils.fromListToString(recipe.getCategories()));\n        recipeIngredients.setText(Utils.fromListToString(recipe.getIngredients()));\n        recipeDate.setText(\"Published on: \" + Utils.fromDateToString(recipe.getCreationTime()));\n        //TO DO\n        recipeLikes.setText(\"Likes: 0\");\n        if(recipe.getComments() != null) {\n            Label commentsTitle = new Label(\"Comments:\");\n            commentsTitle.setFont(Font.font(24));\n            recipeVBox.getChildren().add(commentsTitle);\n            Utils.showComments(recipeVBox, recipe.getComments());\n        }\n//        List<Comment> comments = new ArrayList<>();\n//        comments.add(new Comment(\"Pippo\", \"Hello World!\", new Date()));\n//        comments.add(new Comment(\"Pluto\", \"Fantastic recipe!\", new Date()));\n//        recipe.setComments(comments);\n//        if (comments != null)\n//        {\n//            Label commentsTitle = new Label(\"Comments:\");\n//            commentsTitle.setFont(Font.font(24));\n//            recipeVBox.getChildren().add(commentsTitle);\n//            Utils.showComments(recipeVBox, recipe.getComments());\n//        }\n\n        if(appSession.getLoggedUser().getRole()!=2 && !appSession.getLoggedUser().getUsername().equals(recipe.getAuthorUsername()))\n            recipeDelete.setVisible(false);\n        else\n            recipeDelete.setOnMouseClicked(mouseEvent -> neo4jDriver.deleteRecipe(recipe.getTitle(),recipe.getCreationTime()));\n    }\n\n    /**\n     * Function used to handle the click on the homepage icon\n     * @param mouseEvent    event that represents the click on the icon\n     */\n    private void clickOnHomepageToChangePage(MouseEvent mouseEvent){\n        HomePageController homePageController = (HomePageController)\n                Utils.changeScene(\"/homepage.fxml\", mouseEvent);\n    }\n\n    /**\n     * Function used to handle the click on the profile icon\n     * @param mouseEvent    event that represents the click on the icon\n     */\n    private void clickOnProfileToChangePage(MouseEvent mouseEvent){\n        ProfilePageController profilePageController = (ProfilePageController)\n                Utils.changeScene(\"/profilePage.fxml\", mouseEvent);\n        profilePageController.setProfile(Session.getInstance().getLoggedUser());\n    }\n\n    /**\n     * Function used to handle the click on the discovery icon\n     * @param mouseEvent    event that represents the click on the icon\n     */\n    private void clickOnDiscoveryToChangePage(MouseEvent mouseEvent){\n        DiscoveryPageController discoveryPageController = (DiscoveryPageController)\n                Utils.changeScene(\"/discoveryPage.fxml\", mouseEvent);\n    }\n\n    /**\n     * Function that let the logout action, by going into the welcome page\n     * @param mouseEvent event that represents the click on the icon\n     */\n    private void clickOnLogoutImg(MouseEvent mouseEvent){\n        try {\n            WelcomePageController welcomePageController = (WelcomePageController)\n                    Utils.changeScene(\"/welcome.fxml\", mouseEvent);\n        }catch (NullPointerException n){System.out.println(\"profilePageController is null!!!!\");}\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/RecipePageController.java b/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/RecipePageController.java
--- a/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/RecipePageController.java	(revision 30380974270b3cceba1fe9cb204f49a0351945a7)
+++ b/src/main/java/it/unipi/dii/inginf/lsdb/justrecipe/controller/RecipePageController.java	(date 1608324470639)
@@ -77,6 +77,10 @@
         cancelButton.setOnAction(actionEvent -> handleCancelButtonAction(actionEvent));
     }
 
+    /**
+     * Function who handle the adding comments, and upload on mongoDB
+     * @param actionEvent pressing the button
+     */
     private void handleSendButtonAction(ActionEvent actionEvent){
         if(commentsArea.getText().equals("")) {
             Utils.showErrorAlert("No Comments in the CommentsArea");
@@ -97,16 +101,26 @@
         mongoDBDriver.updateComments(recipe.getTitle(), recipe.getComments());
     }
 
+    /**
+     * Cancelling the comment textArea by clicking on the cancel Button
+     * @param actionEvent pressing the button
+     */
     private void handleCancelButtonAction(ActionEvent actionEvent){
         if(!commentsArea.getText().equals("")) commentsArea.setText("");
     }
 
     /**
      * Setters for the recipe, in which we also set the correct value to show
-     * @param recipe    Recipe to show
+     * @param r    Recipe to show
      */
-    public void setRecipe(Recipe recipe) {
-        this.recipe = recipe;
+    public void setRecipe(Recipe r) {
+        String title = r.getTitle();
+        if(r.getInstructions() == null){
+            System.out.println("Snap from Neo ---> getting recipes from MongoDB!");                                     //DEBUG
+            Recipe recipeMongoDB = MongoDBDriver.getInstance().getRecipeFromTitle(title);
+            this.recipe = recipeMongoDB;
+        }else
+            this.recipe = r;
         recipeTitle.setText(recipe.getTitle());
         recipeInstructions.setText(recipe.getInstructions());
         if (recipe.getPicture() != null)
Index: src/main/resources/recipePage.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<?import javafx.geometry.Insets?>\n<?import javafx.scene.control.Button?>\n<?import javafx.scene.control.Label?>\n<?import javafx.scene.control.ScrollPane?>\n<?import javafx.scene.control.TextArea?>\n<?import javafx.scene.effect.Blend?>\n<?import javafx.scene.image.Image?>\n<?import javafx.scene.image.ImageView?>\n<?import javafx.scene.layout.BorderPane?>\n<?import javafx.scene.layout.HBox?>\n<?import javafx.scene.layout.Pane?>\n<?import javafx.scene.layout.VBox?>\n<?import javafx.scene.shape.Line?>\n<?import javafx.scene.text.Font?>\n<?import javafx.scene.text.Text?>\n\n<VBox xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"it.unipi.dii.inginf.lsdb.justrecipe.controller.RecipePageController\">\n   <children>\n      <BorderPane prefHeight=\"84.0\" style=\"-fx-background-color: rgb(237, 160, 66);\">\n         <effect>\n            <Blend />\n         </effect>\n         <left>\n            <ImageView fitHeight=\"81.0\" fitWidth=\"95.0\" pickOnBounds=\"true\" preserveRatio=\"true\" BorderPane.alignment=\"CENTER\">\n               <image>\n                  <Image url=\"@img/icon.png\" />\n               </image>\n               <BorderPane.margin>\n                  <Insets left=\"20.0\" />\n               </BorderPane.margin>\n            </ImageView>\n         </left>\n         <right>\n            <HBox alignment=\"CENTER\" prefHeight=\"84.0\" prefWidth=\"240.0\" BorderPane.alignment=\"CENTER\">\n               <children>\n                  <ImageView fx:id=\"logoutPic\" fitHeight=\"45.0\" fitWidth=\"45.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                     <image>\n                        <Image url=\"@img/exit.png\" />\n                     </image>\n                     <HBox.margin>\n                        <Insets right=\"20.0\" />\n                     </HBox.margin>\n                  </ImageView>\n                  <ImageView fx:id=\"homeImg\" fitHeight=\"45.0\" fitWidth=\"45.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                     <image>\n                        <Image url=\"@img/home.png\" />\n                     </image>\n                     <HBox.margin>\n                        <Insets right=\"20.0\" />\n                     </HBox.margin>\n                  </ImageView>\n                  <ImageView fx:id=\"discoveryImg\" fitHeight=\"45.0\" fitWidth=\"45.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                     <image>\n                        <Image url=\"@img/discovery.png\" />\n                     </image>\n                     <HBox.margin>\n                        <Insets right=\"20.0\" />\n                     </HBox.margin>\n                  </ImageView>\n                  <ImageView fx:id=\"profileImg\" fitHeight=\"45.0\" fitWidth=\"45.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                     <image>\n                        <Image url=\"@img/user.png\" />\n                     </image>\n                     <HBox.margin>\n                        <Insets right=\"20.0\" />\n                     </HBox.margin>\n                  </ImageView>\n               </children>\n            </HBox>\n         </right>\n         <center>\n            <HBox alignment=\"CENTER_LEFT\" BorderPane.alignment=\"CENTER\" />\n         </center>\n      </BorderPane>\n      <ScrollPane hbarPolicy=\"NEVER\" vbarPolicy=\"ALWAYS\">\n         <content>\n            <HBox alignment=\"CENTER\" prefHeight=\"700.0\" prefWidth=\"1197.0\" style=\"-fx-background-color: RGB(204, 199, 194);\">\n               <opaqueInsets>\n                  <Insets />\n               </opaqueInsets>\n               <children>\n                  <ScrollPane hbarPolicy=\"NEVER\" prefWidth=\"772.0\" style=\"-fx-background-color: white;\" vbarPolicy=\"NEVER\">\n                     <content>\n                        <VBox fx:id=\"recipeVBox\" maxHeight=\"1.7976931348623157E308\" maxWidth=\"1.7976931348623157E308\" prefWidth=\"770.0\" spacing=\"20.0\" style=\"-fx-background-color: white;\">\n                           <children>\n                              <Pane maxHeight=\"1.7976931348623157E308\" maxWidth=\"1.7976931348623157E308\" VBox.vgrow=\"ALWAYS\">\n                                 <children>\n                                    <Text fx:id=\"recipeTitle\" focusTraversable=\"true\" layoutX=\"20.0\" layoutY=\"66.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Tiramisu\" wrappingWidth=\"725.0\">\n                                       <font>\n                                          <Font size=\"48.0\" />\n                                       </font>\n                                    </Text>\n                                 </children>\n                              </Pane>\n                              <HBox prefHeight=\"247.0\" prefWidth=\"770.0\" VBox.vgrow=\"ALWAYS\">\n                                 <children>\n                                    <Pane maxHeight=\"1.7976931348623157E308\" maxWidth=\"1.7976931348623157E308\" prefHeight=\"250.0\" prefWidth=\"260.0\">\n                                       <children>\n                                          <ImageView fx:id=\"recipePicture\" fitHeight=\"208.0\" fitWidth=\"232.0\" layoutX=\"35.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                             <image>\n                                                <Image url=\"@img/genericRecipe.png\" />\n                                             </image>\n                                          </ImageView>\n                                       </children>\n                                    </Pane>\n                                    <Pane prefHeight=\"250.0\" prefWidth=\"199.0\">\n                                       <children>\n                                          <ImageView fitHeight=\"40.0\" fitWidth=\"40.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                             <image>\n                                                <Image url=\"@img/user.png\" />\n                                             </image>\n                                          </ImageView>\n                                          <Text fx:id=\"recipeUsername\" layoutX=\"48.0\" layoutY=\"29.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Username\">\n                                             <font>\n                                                <Font size=\"22.0\" />\n                                             </font>\n                                          </Text>\n                                          <ImageView fitHeight=\"40.0\" fitWidth=\"40.0\" layoutY=\"46.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                             <image>\n                                                <Image url=\"@img/carbs.png\" />\n                                             </image>\n                                          </ImageView>\n                                          <ImageView fitHeight=\"40.0\" fitWidth=\"40.0\" layoutY=\"88.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                             <image>\n                                                <Image url=\"@img/calories.png\" />\n                                             </image>\n                                          </ImageView>\n                                          <ImageView fitHeight=\"40.0\" fitWidth=\"40.0\" layoutY=\"136.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                             <image>\n                                                <Image url=\"@img/fat.png\" />\n                                             </image>\n                                          </ImageView>\n                                          <Text fx:id=\"recipeCarbs\" layoutX=\"55.0\" layoutY=\"75.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"30\">\n                                             <font>\n                                                <Font size=\"22.0\" />\n                                             </font>\n                                          </Text>\n                                          <Text fx:id=\"recipeCalories\" layoutX=\"55.0\" layoutY=\"124.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"20\">\n                                             <font>\n                                                <Font size=\"22.0\" />\n                                             </font>\n                                          </Text>\n                                          <Text fx:id=\"recipeFat\" layoutX=\"55.0\" layoutY=\"165.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"40\">\n                                             <font>\n                                                <Font size=\"22.0\" />\n                                             </font>\n                                          </Text>\n                                          <ImageView fitHeight=\"40.0\" fitWidth=\"40.0\" layoutY=\"179.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                             <image>\n                                                <Image url=\"@img/protein1.png\" />\n                                             </image>\n                                          </ImageView>\n                                          <Text fx:id=\"recipeProtein\" layoutX=\"55.0\" layoutY=\"208.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"50\">\n                                             <font>\n                                                <Font size=\"22.0\" />\n                                             </font>\n                                          </Text>\n                                          <Line endY=\"-38.0\" layoutX=\"178.0\" layoutY=\"51.0\" startY=\"167.0\" />\n                                       </children>\n                                    </Pane>\n                                    <Pane prefHeight=\"240.0\" prefWidth=\"318.0\">\n                                       <children>\n                                          <ImageView fx:id=\"recipeLikeImg\" fitHeight=\"40.0\" fitWidth=\"54.0\" layoutX=\"14.0\" layoutY=\"60.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                             <image>\n                                                <Image url=\"@img/like.png\" />\n                                             </image>\n                                          </ImageView>\n                                          <ImageView fx:id=\"recipeEditImg\" fitHeight=\"40.0\" fitWidth=\"70.0\" layoutX=\"17.0\" layoutY=\"114.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                             <image>\n                                                <Image url=\"@img/edit.png\" />\n                                             </image>\n                                          </ImageView>\n                                          <Label fx:id=\"recipeLikes\" layoutX=\"14.0\" layoutY=\"23.0\" text=\"Like:\">\n                                             <font>\n                                                <Font size=\"15.0\" />\n                                             </font>\n                                          </Label>\n                                          <Label fx:id=\"recipeDate\" layoutX=\"108.0\" layoutY=\"23.0\" text=\"Published on:\">\n                                             <font>\n                                                <Font size=\"15.0\" />\n                                             </font>\n                                          </Label>\n                                          <ImageView fx:id=\"recipeDelete\" fitHeight=\"40.0\" fitWidth=\"200.0\" layoutX=\"14.0\" layoutY=\"173.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                             <image>\n                                                <Image url=\"@img/delete.png\" />\n                                             </image>\n                                          </ImageView>\n                                       </children>\n                                    </Pane>\n                                 </children>\n                                 <padding>\n                                    <Insets top=\"20.0\" />\n                                 </padding>\n                              </HBox>\n                              <Pane maxHeight=\"1.7976931348623157E308\" maxWidth=\"1.7976931348623157E308\" prefWidth=\"770.0\" style=\"-fx-background-color: white;\" VBox.vgrow=\"ALWAYS\">\n                                 <children>\n                                    <ImageView fitHeight=\"84.0\" fitWidth=\"78.0\" layoutX=\"20.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                       <image>\n                                          <Image url=\"@img/ingredients1.png\" />\n                                       </image>\n                                    </ImageView>\n                                    <Text fx:id=\"recipeIngredients\" layoutX=\"114.0\" layoutY=\"45.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"uova, mascarpone, ingr1, ingr2, ingr3, ingr4, ingr5\" wrappingWidth=\"600.0\">\n                                       <font>\n                                          <Font size=\"15.0\" />\n                                       </font>\n                                    </Text>\n                                 </children>\n                                 <VBox.margin>\n                                    <Insets bottom=\"5.0\" />\n                                 </VBox.margin>\n                              </Pane>\n                              <Pane maxHeight=\"1.7976931348623157E308\" maxWidth=\"1.7976931348623157E308\" prefWidth=\"770.0\" VBox.vgrow=\"ALWAYS\">\n                                 <children>\n                                    <Text fx:id=\"recipeInstructions\" layoutX=\"23.0\" layoutY=\"20.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Anticamente le nonne usavano preparare una colazione che oggi potremmo definirepovera, ma che all’epoca era davvero ricchissima! Ancora oggi la ricetta è immutata,basta rompere in un bicchiere un uovo freschissimo e sbatterlo con dello zucchero ea piacere aggiungere caffè o latte caldo, per i più piccoli, e marsala o anice per i piùgrandicelli. Ed è proprio da questa portentosa crema che nasce la crema al mascarponebase del tiramisù. Il dolce italiano per eccellenza, quello più famoso e amato,ma soprattutto che ha dato vita a tantissime altre versioni, anche tiramisù senza uova!Poi il tiramisù alle fragole o quello alla Nutella, giusto per citarne un paio!Senza contare le rivisitazioni più raffinate come la crostata morbida o la torta al tiramisù.\" wrappingWidth=\"725.0\" />\n                                 </children>\n                                 <VBox.margin>\n                                    <Insets />\n                                 </VBox.margin>\n                              </Pane>\n                              <Pane maxHeight=\"1.7976931348623157E308\" maxWidth=\"1.7976931348623157E308\" VBox.vgrow=\"ALWAYS\">\n                                 <children>\n                                    <ImageView fitHeight=\"71.0\" fitWidth=\"63.0\" layoutX=\"35.0\" layoutY=\"9.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                       <image>\n                                          <Image url=\"@img/tag.png\" />\n                                       </image>\n                                    </ImageView>\n                                    <Text fx:id=\"recipeCategories\" layoutX=\"117.0\" layoutY=\"37.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"italian, dolce, prova, ciao, mascarpone\" wrappingWidth=\"600.0\">\n                                       <font>\n                                          <Font size=\"15.0\" />\n                                       </font>\n                                    </Text>\n                                 </children>\n                                 <opaqueInsets>\n                                    <Insets />\n                                 </opaqueInsets>\n                                 <VBox.margin>\n                                    <Insets bottom=\"20.0\" />\n                                 </VBox.margin>\n                              </Pane>\n                              <Pane prefHeight=\"200.0\" prefWidth=\"200.0\">\n                                 <children>\n                                    <TextArea fx:id=\"commentsArea\" focusTraversable=\"false\" layoutX=\"29.0\" layoutY=\"39.0\" prefHeight=\"106.0\" prefWidth=\"723.0\" />\n                                    <Label layoutX=\"282.0\" layoutY=\"9.0\" text=\"Write a comment:\">\n                                       <font>\n                                          <Font size=\"24.0\" />\n                                       </font>\n                                    </Label>\n                                    <Button fx:id=\"sendButton\" layoutX=\"644.0\" layoutY=\"160.0\" mnemonicParsing=\"false\" text=\"AddComment\" />\n                                    <Button fx:id=\"cancelButton\" layoutX=\"567.0\" layoutY=\"160.0\" mnemonicParsing=\"false\" text=\"Cancel\" />\n                                 </children>\n                              </Pane>\n                           </children>\n                        </VBox>\n                     </content>\n                  </ScrollPane>\n               </children>\n            </HBox>\n         </content>\n      </ScrollPane>\n   </children>\n</VBox>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/recipePage.fxml b/src/main/resources/recipePage.fxml
--- a/src/main/resources/recipePage.fxml	(revision 30380974270b3cceba1fe9cb204f49a0351945a7)
+++ b/src/main/resources/recipePage.fxml	(date 1608281932992)
@@ -247,8 +247,8 @@
                                           <Font size="24.0" />
                                        </font>
                                     </Label>
-                                    <Button fx:id="sendButton" layoutX="644.0" layoutY="160.0" mnemonicParsing="false" text="AddComment" />
-                                    <Button fx:id="cancelButton" layoutX="567.0" layoutY="160.0" mnemonicParsing="false" text="Cancel" />
+                                    <Button fx:id="sendButton" layoutX="701.0" layoutY="160.0" mnemonicParsing="false" text="Send" />
+                                    <Button fx:id="cancelButton" layoutX="624.0" layoutY="160.0" mnemonicParsing="false" text="Cancel" />
                                  </children>
                               </Pane>
                            </children>
Index: src/main/resources/profilePage.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<?import javafx.geometry.Insets?>\n<?import javafx.scene.chart.CategoryAxis?>\n<?import javafx.scene.chart.LineChart?>\n<?import javafx.scene.chart.NumberAxis?>\n<?import javafx.scene.control.Label?>\n<?import javafx.scene.control.ScrollPane?>\n<?import javafx.scene.image.Image?>\n<?import javafx.scene.image.ImageView?>\n<?import javafx.scene.layout.BorderPane?>\n<?import javafx.scene.layout.HBox?>\n<?import javafx.scene.layout.VBox?>\n<?import javafx.scene.text.Font?>\n<?import javafx.scene.text.Text?>\n\n<VBox maxHeight=\"1.7976931348623157E308\" maxWidth=\"1.7976931348623157E308\" prefHeight=\"778.0\" prefWidth=\"1197.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"it.unipi.dii.inginf.lsdb.justrecipe.controller.ProfilePageController\">\n   <children>\n      <BorderPane prefHeight=\"200.0\" prefWidth=\"200.0\" style=\"-fx-background-color: rgb(237, 160, 66);\">\n         <center>\n            <LineChart prefHeight=\"201.0\" prefWidth=\"914.0\" title=\"Week calories!\" BorderPane.alignment=\"CENTER\">\n              <xAxis>\n                <CategoryAxis label=\"Days\" prefHeight=\"17.0\" prefWidth=\"869.0\" side=\"BOTTOM\" />\n              </xAxis>\n              <yAxis>\n                <NumberAxis label=\"Calories\" side=\"LEFT\" />\n              </yAxis>\n               <BorderPane.margin>\n                  <Insets />\n               </BorderPane.margin>\n            </LineChart>\n         </center>\n         <left>\n            <HBox BorderPane.alignment=\"CENTER\">\n               <children>\n                  <VBox prefHeight=\"200.0\" prefWidth=\"100.0\">\n                     <children>\n                        <ImageView fitHeight=\"144.0\" fitWidth=\"153.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                           <image>\n                              <Image url=\"@img/user.png\" />\n                           </image>\n                           <VBox.margin>\n                              <Insets left=\"20.0\" top=\"10.0\" />\n                           </VBox.margin>\n                        </ImageView>\n                        <HBox>\n                           <VBox.margin>\n                              <Insets left=\"20.0\" />\n                           </VBox.margin>\n                           <children>\n                              <Text strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"userName\">\n                                 <font>\n                                    <Font size=\"24.0\" />\n                                 </font>\n                                 <HBox.margin>\n                                    <Insets top=\"10.0\" />\n                                 </HBox.margin>\n                              </Text>\n                              <ImageView fitHeight=\"45.0\" fitWidth=\"45.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                 <image>\n                                    <Image url=\"@img/follow_profile.png\" />\n                                 </image>\n                              </ImageView>\n                           </children>\n                        </HBox>\n                        <HBox alignment=\"CENTER\" prefHeight=\"100.0\" prefWidth=\"200.0\" spacing=\"30.0\">\n                           <children>\n                              <ImageView fx:id=\"profileDeleteUser\" fitHeight=\"45.0\" fitWidth=\"45.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                 <image>\n                                    <Image url=\"@img/delete.png\" />\n                                 </image>\n                              </ImageView>\n                              <ImageView fx:id=\"profileEditUser\" fitHeight=\"45.0\" fitWidth=\"45.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                                 <image>\n                                    <Image url=\"@img/edit.png\" />\n                                 </image>\n                                 <HBox.margin>\n                                    <Insets />\n                                 </HBox.margin>\n                              </ImageView>\n                           </children>\n                           <VBox.margin>\n                              <Insets bottom=\"20.0\" />\n                           </VBox.margin>\n                        </HBox>\n                     </children>\n                  </VBox>\n               </children>\n            </HBox>\n         </left>\n         <right>\n            <VBox prefHeight=\"124.0\" prefWidth=\"45.0\" BorderPane.alignment=\"CENTER\">\n               <children>\n                  <ImageView fx:id=\"addRecipeImg\" fitHeight=\"45.0\" fitWidth=\"45.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                     <image>\n                        <Image url=\"@img/addRecipe.png\" />\n                     </image>\n                     <VBox.margin>\n                        <Insets />\n                     </VBox.margin>\n                  </ImageView>\n                  <ImageView fx:id=\"discoveryImg\" fitHeight=\"45.0\" fitWidth=\"45.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                     <image>\n                        <Image url=\"@img/discovery.png\" />\n                     </image>\n                     <VBox.margin>\n                        <Insets top=\"5.0\" />\n                     </VBox.margin>\n                  </ImageView>\n                  <ImageView fx:id=\"homepageIcon\" fitHeight=\"45.0\" fitWidth=\"45.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                     <image>\n                        <Image url=\"@img/home.png\" />\n                     </image>\n                     <VBox.margin>\n                        <Insets top=\"5.0\" />\n                     </VBox.margin>\n                  </ImageView>\n                  <ImageView fx:id=\"logoutPic\" fitHeight=\"45.0\" fitWidth=\"45.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\n                     <image>\n                        <Image url=\"@img/exit.png\" />\n                     </image>\n                     <VBox.margin>\n                        <Insets bottom=\"10.0\" top=\"5.0\" />\n                     </VBox.margin>\n                  </ImageView>\n               </children>\n               <BorderPane.margin>\n                  <Insets right=\"10.0\" top=\"25.0\" />\n               </BorderPane.margin>\n            </VBox>\n         </right>\n      </BorderPane>\n      <ScrollPane hbarPolicy=\"NEVER\">\n         <content>\n            <HBox prefHeight=\"582.0\" prefWidth=\"1197.0\" style=\"-fx-background-color: RGB(204, 199, 194);\">\n               <children>\n                  <VBox prefHeight=\"580.0\" prefWidth=\"199.0\">\n                     <children>\n                        <HBox>\n                           <children>\n                              <Label text=\"Follower:\" />\n                              <Text strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"number\" />\n                           </children>\n                           <VBox.margin>\n                              <Insets left=\"40.0\" top=\"30.0\" />\n                           </VBox.margin>\n                        </HBox>\n                        <HBox>\n                           <children>\n                              <Label text=\"Following:\" />\n                              <Text strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"number\" />\n                           </children>\n                           <VBox.margin>\n                              <Insets left=\"40.0\" top=\"10.0\" />\n                           </VBox.margin>\n                        </HBox>\n                        <HBox>\n                           <children>\n                              <Label text=\"Recipes:\" />\n                              <Text strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"number\" />\n                           </children>\n                           <VBox.margin>\n                              <Insets left=\"40.0\" top=\"10.0\" />\n                           </VBox.margin>\n                        </HBox>\n                     </children>\n                  </VBox>\n                  <VBox prefHeight=\"700.0\" prefWidth=\"891.0\" style=\"-fx-background-color: white;\" />\n               </children>\n            </HBox>\n         </content>\n      </ScrollPane>\n   </children>\n</VBox>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/profilePage.fxml b/src/main/resources/profilePage.fxml
--- a/src/main/resources/profilePage.fxml	(revision 30380974270b3cceba1fe9cb204f49a0351945a7)
+++ b/src/main/resources/profilePage.fxml	(date 1608326501786)
@@ -4,6 +4,7 @@
 <?import javafx.scene.chart.CategoryAxis?>
 <?import javafx.scene.chart.LineChart?>
 <?import javafx.scene.chart.NumberAxis?>
+<?import javafx.scene.control.Button?>
 <?import javafx.scene.control.Label?>
 <?import javafx.scene.control.ScrollPane?>
 <?import javafx.scene.image.Image?>
@@ -48,9 +49,9 @@
                               <Insets left="20.0" />
                            </VBox.margin>
                            <children>
-                              <Text strokeType="OUTSIDE" strokeWidth="0.0" text="userName">
+                              <Text fx:id="userName" strokeType="OUTSIDE" strokeWidth="0.0" style="-fx-font-weight: bold;" text="userName">
                                  <font>
-                                    <Font size="24.0" />
+                                    <Font size="18.0" />
                                  </font>
                                  <HBox.margin>
                                     <Insets top="10.0" />
@@ -65,12 +66,12 @@
                         </HBox>
                         <HBox alignment="CENTER" prefHeight="100.0" prefWidth="200.0" spacing="30.0">
                            <children>
-                              <ImageView fx:id="profileDeleteUser" fitHeight="45.0" fitWidth="45.0" pickOnBounds="true" preserveRatio="true">
+                              <ImageView fx:id="profileDeleteUser" fitHeight="40.0" fitWidth="40.0" pickOnBounds="true" preserveRatio="true">
                                  <image>
                                     <Image url="@img/delete.png" />
                                  </image>
                               </ImageView>
-                              <ImageView fx:id="profileEditUser" fitHeight="45.0" fitWidth="45.0" pickOnBounds="true" preserveRatio="true">
+                              <ImageView fx:id="profileEditUser" fitHeight="40.0" fitWidth="40.0" pickOnBounds="true" preserveRatio="true">
                                  <image>
                                     <Image url="@img/edit.png" />
                                  </image>
@@ -132,14 +133,14 @@
       </BorderPane>
       <ScrollPane hbarPolicy="NEVER">
          <content>
-            <HBox prefHeight="582.0" prefWidth="1197.0" style="-fx-background-color: RGB(204, 199, 194);">
+            <HBox prefHeight="518.0" prefWidth="1197.0" style="-fx-background-color: RGB(204, 199, 194);">
                <children>
-                  <VBox prefHeight="580.0" prefWidth="199.0">
+                  <VBox prefHeight="451.0" prefWidth="199.0">
                      <children>
-                        <HBox>
+                        <HBox prefHeight="16.0" prefWidth="118.0">
                            <children>
                               <Label text="Follower:" />
-                              <Text strokeType="OUTSIDE" strokeWidth="0.0" text="number" />
+                              <Text fx:id="followerNumber" strokeType="OUTSIDE" strokeWidth="0.0" text="number" />
                            </children>
                            <VBox.margin>
                               <Insets left="40.0" top="30.0" />
@@ -148,7 +149,7 @@
                         <HBox>
                            <children>
                               <Label text="Following:" />
-                              <Text strokeType="OUTSIDE" strokeWidth="0.0" text="number" />
+                              <Text fx:id="followingNumber" strokeType="OUTSIDE" strokeWidth="0.0" text="number" />
                            </children>
                            <VBox.margin>
                               <Insets left="40.0" top="10.0" />
@@ -157,7 +158,7 @@
                         <HBox>
                            <children>
                               <Label text="Recipes:" />
-                              <Text strokeType="OUTSIDE" strokeWidth="0.0" text="number" />
+                              <Text fx:id="recipesNumber" strokeType="OUTSIDE" strokeWidth="0.0" text="number" />
                            </children>
                            <VBox.margin>
                               <Insets left="40.0" top="10.0" />
@@ -165,7 +166,23 @@
                         </HBox>
                      </children>
                   </VBox>
-                  <VBox prefHeight="700.0" prefWidth="891.0" style="-fx-background-color: white;" />
+                  <VBox prefWidth="891.0">
+                     <children>
+                        <VBox fx:id="recipeVbox" focusTraversable="true" prefHeight="480.0" prefWidth="891.0" style="-fx-background-color: white;" />
+                        <HBox spacing="10.0" style="-fx-alignment: center;">
+                           <children>
+                              <Button fx:id="previousButton" focusTraversable="false" mnemonicParsing="false" text="Previous">
+                                 <HBox.margin>
+                                    <Insets bottom="5.0" top="5.0" />
+                                 </HBox.margin></Button>
+                              <Button fx:id="nextButton" focusTraversable="false" mnemonicParsing="false" text="Next">
+                                 <HBox.margin>
+                                    <Insets bottom="5.0" top="5.0" />
+                                 </HBox.margin></Button>
+                           </children>
+                        </HBox>
+                     </children>
+                  </VBox>
                </children>
             </HBox>
          </content>
